name: 'Build, test and publish image'

on:
  push:
    branches:
      - '**'
      - '!main'
    tags:
      - v*
env:
  TEST_TAG: emnigma/app:test
  DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}

jobs:
  release:
    name: 'Full dev pipeline CI run'
    runs-on: ubuntu-latest
    outputs:
      dockertag: ${{ steps.set_output.outputs.dockertag }}
    steps:
      - name: 'Setup environment variables and make out dir'
        run: |
          echo "WORKFLOWS_DIR=${{ github.workspace }}/.github/workflows/" >> $GITHUB_ENV
          echo "OUTPUT_DIR=out" >> $GITHUB_ENV
          mkdir out

      - name: 'Debug'
        run: |
          printenv

      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 'Install requirements.txt'
        run:
          python3 -m pip install pandas

      - name: 'Log in to Docker Hub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 'Extract metadata (tags, labels) for Docker'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{raw}}

      - name: 'Set Docker tag output'
        id: set_output
        run: echo "dockertag=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: 'Test image'
        run:
          docker run --rm -v ${{ env.WORKFLOWS_DIR }}/example_subjects:/root/data -v ${{ env.OUTPUT_DIR }}:/root/out \${{ env.TEST_TAG }} /root/data subj1 /root/out

      - name: 'DEBUG'
        run:
          ls -lR ${{ env.OUTPUT_DIR }}

      - name: 'Convert index.html to .pdf'
        run: |
          cp ${{ env.OUTPUT_DIR }}/report_gen_output/index.html index.html
          yarn install
          yarn run dev &
          python3 convert.py ${{ env.OUTPUT_DIR }}/report_gen_output

      - name: 'Upload report.pdf artifact'
        uses: actions/upload-artifact@v4
        with:
          name: patient_pdf
          path: ${{ env.OUTPUT_DIR }}/report_gen_output/report.pdf
          retention-days: 1

      - name: 'Convert JSON to Markdown'
        run: |
          python3 ${{ env.WORKFLOWS_DIR }}/json_to_md.py \
            --json ${{ env.OUTPUT_DIR }}/volumes_json_output/data.json \
            --md volumes.md

      - name: 'Display CI Summary'
        run: |
          echo "Volumes Summary"
          cat volumes.md
        continue-on-error: true

      - name: 'Create GitHub Actions Summary'
        run: |
          echo "## Volumes Summary" >> $GITHUB_STEP_SUMMARY
          cat volumes.md >> $GITHUB_STEP_SUMMARY

      - name: 'Build and push Docker image'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
